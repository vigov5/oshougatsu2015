-- MySQL dump 10.13  Distrib 5.5.46, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: bk
-- ------------------------------------------------------
-- Server version	5.5.46-0ubuntu0.14.04.2

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `alembic_version`
--

DROP TABLE IF EXISTS `alembic_version`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `alembic_version` (
  `version_num` varchar(32) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `alembic_version`
--

LOCK TABLES `alembic_version` WRITE;
/*!40000 ALTER TABLE `alembic_version` DISABLE KEYS */;
INSERT INTO `alembic_version` VALUES ('1c7342e9badb');
/*!40000 ALTER TABLE `alembic_version` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `contests`
--

DROP TABLE IF EXISTS `contests`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contests` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `description` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `start_at` datetime DEFAULT NULL,
  `end_at` datetime DEFAULT NULL,
  `result_announced_at` datetime DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `contests`
--

LOCK TABLES `contests` WRITE;
/*!40000 ALTER TABLE `contests` DISABLE KEYS */;
INSERT INTO `contests` VALUES (5,'New Year Contest 5','Contest for HEDSPI Oshougatsu 2015','2016-01-14 13:38:07','2016-01-14 19:16:19','2016-01-14 19:16:19','2016-01-12 16:40:22','2016-01-14 19:16:19'),(6,'New Year Contest 6','Contest for HEDSPI Oshougatsu 2015','2016-01-14 19:17:28','2016-01-14 19:32:28','2016-01-14 19:32:28','2016-01-14 19:16:14','2016-01-14 19:17:28');
/*!40000 ALTER TABLE `contests` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `hints`
--

DROP TABLE IF EXISTS `hints`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `hints` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `description` text,
  `is_open` tinyint(1) DEFAULT NULL,
  `problem_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `problem_id` (`problem_id`),
  CONSTRAINT `hints_ibfk_1` FOREIGN KEY (`problem_id`) REFERENCES `problems` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `hints`
--

LOCK TABLES `hints` WRITE;
/*!40000 ALTER TABLE `hints` DISABLE KEYS */;
/*!40000 ALTER TABLE `hints` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `problems`
--

DROP TABLE IF EXISTS `problems`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `problems` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contest_id` int(11) DEFAULT NULL,
  `name_vi` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `rank` int(11) DEFAULT NULL,
  `content_vi` text COLLATE utf8_unicode_ci,
  `limited_time` int(11) DEFAULT NULL,
  `limited_memory` int(11) DEFAULT NULL,
  `limited_source_size` int(11) DEFAULT NULL,
  `starting_point` int(11) DEFAULT NULL,
  `wrong_answer_decreased_point` int(11) DEFAULT NULL,
  `slowly_decreased_interval` int(11) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `name_en` text COLLATE utf8_unicode_ci,
  `content_en` text COLLATE utf8_unicode_ci,
  `category` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `contest_id` (`contest_id`),
  CONSTRAINT `problems_ibfk_1` FOREIGN KEY (`contest_id`) REFERENCES `contests` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `problems`
--

LOCK TABLES `problems` WRITE;
/*!40000 ALTER TABLE `problems` DISABLE KEYS */;
INSERT INTO `problems` VALUES (9,5,'Left&Right',0,'<h5>Nhiệm vụ của bạn là đưa hết các mũi tên sang phía cũng màu với nó</h5>\r\n<h5>Cách chơi</h5>\r\nClick chuột vào các mũi tên để di chuyển chúng.<br>\r\nMột mũi tên chỉ có thể di chuyển tiến lên phía trước theo chiều mũi tên của nó.<br>\r\nNếu đằng trước mũi tên không có vật cản, nó sẽ tiến thêm 1 bước.<br>\r\nNếu đằng trước mũi tên có 1 vật cản, nó sẽ nhảy qua vật cản đó và tới vị trí tiếp theo.<br>\r\nNếu đằng trước mũi tên có hơn 1 vật cản, mũi tên sẽ không thể di chuyển nữa.<br>\r\nLoad lại trang web để chơi lại từ đầu.\r\n<br>\r\nĐiểm của bạn sẽ được cập nhật tự động khi hoàn thành game.',2000,262144,262144,100,0,86400000,'2016-01-12 15:35:41','2016-01-14 13:38:00','Left&Right','LR',2),(10,5,'Magic 7',0,'<h5>Nhiệm vụ của bạn là điều chỉnh bảng số hiện lên số 864192</h5>\r\n<h5>Cách chơi</h5>\r\nCó 3 nút nhấn. Nút \"0\" để restart game, nút \"+7\" để cộng 7 vào số trên bảng điện tử, nút \"x10\" là để nhân 10 vào số trên bảng điện tử.\r\n<br>\r\nĐiểm của bạn sẽ được cập nhật tự động khi hoàn thành game.',2000,262144,262144,100,0,86400000,'2016-01-12 15:35:41','2016-01-14 13:38:00','Magic 7','SM',2),(11,5,'Unblock me',1,'<h5>Nhiệm vụ của bạn là đưa khối màu xanh lá đến với hình tròn màu xanh lá</h5>\r\n<h5>Cách chơi</h5>\r\nDùng chuột để di chuyển các khối chữ nhật. Mỗi khối sẽ chỉ di chuyển được theo hướng chiều dài của nó.\r\n<br>\r\nĐiểm của bạn sẽ được cập nhật tự động khi hoàn thành game.',2000,262144,262144,200,0,86400000,'2016-01-12 15:35:41','2016-01-14 13:38:00','Unblock me','CNUB',2),(12,5,'Fill it',0,'<h5>Nhiệm vụ của bạn là làm đen toàn bộ tấm bảng</h5>\r\n<h5>Cách chơi</h5>\r\nClick chuột để chọn vị trí bắt đầu bất kỳ. Sau đó di chuyển theo một trong các hướng mũi tên hiện ra.\r\n<br>\r\nĐiểm của bạn sẽ được cập nhật tự động khi hoàn thành game.',2000,262144,262144,100,0,86400000,'2016-01-12 15:35:41','2016-01-14 13:38:00','Fill it','FI',2),(13,5,'Beez',1,'<h5>Nhiệm vụ của bạn là lấp đầy mật vào tổ ong</h5>\r\n<h5>Cách chơi</h5>\r\nDùng chuột để click vào các ô trong tổ ong. Mỗi lần click vào một ô, những ô xung quanh của ô đó sẽ thay đổi trạng thái, từ có mật sang không có và ngược lại. Ô bị click sẽ không đổi trạng thái.\r\n<br>\r\nĐiểm của bạn sẽ được cập nhật tự động khi hoàn thành game.',2000,262144,262144,200,0,86400000,'2016-01-12 15:35:41','2016-01-14 13:38:00','Beez','BN',2),(14,5,'Colorful',0,'<h5>Mục tiêu của bạn là điền màu vào cho các ô của bảng sau cho đúng quy luật<h5>\r\n<h5>Quy luật</h5>\r\n3 ô liền nhau, ngang hoặc dọc không được cùng màu với nhau\r\n<br>\r\nMỗi hàng phải có 3 màu đỏ và 3 màu xanh lá\r\n<br>\r\nMỗi cột cũng phải có 3 màu đỏ và 3 màu xanh lá\r\n<h5>Cách chơi</h5>\r\nDùng chuột để click vào các ô, để đổi hoặc xoá màu ở ô đó.\r\n<br>\r\nĐiểm của bạn sẽ được cập nhật tự động khi hoàn thành game.',2000,262144,262144,100,0,86400000,'2016-01-12 15:35:41','2016-01-14 13:38:00','Colorful','CLF',2),(15,5,'The Old Machine',0,'<h5>Nhiệm vụ của bạn là mở khoá một cỗ máy bảo mật cũ</h5>\r\n<h5>Cách chơi</h5>\r\nKéo thả những ổ khoá bên dưới lên những ổ khoá to phù hợp bên trên. Quan sát sự thay đổi của các ổ khoá to, tìm ra quy luật và chiến thắng. Điểm của bạn sẽ được tự động cập nhật khi hoàn thành trò chơi.\r\n<h5>Trạng thái chiến thắng</h5>\r\n- Cả 5 ổ khoá nhỏ đều được lắp.\r\n<br>\r\n- Ở trạng thái cuối cùng, số chấm trắng ở các ổ khoá to và ổ khoá nhỏ tương ứng với chúng phải đồng dư khi đem chia cho 6.\r\n<br>\r\nĐiểm của bạn sẽ được cập nhật tự động khi hoàn thành game.',2000,262144,262144,100,0,86400000,'2016-01-12 15:35:41','2016-01-14 13:38:00','The Old Machine','OM',2),(16,6,'Squares hater',1,'<h5>Nhiệm vụ của bạn là làm biến mất hết những ô vuông đang di chuyển</h5>\r\n<h5>Cách chơi</h5>\r\n<h5>Chắc chắn các bạn sẽ cần chơi thử vì hướng dẫn dưới đây khá khó hiểu ở lần đầu tiên</h5>\r\n<br>\r\nCác hình vuông có 3 màu khác nhau là đỏ, xanh lá và vàng cam. Riêng hình màu cam có 2 loại là loại to và loại nhỏ, hai màu còn lại chỉ có loại nhỏ. Bản đồ gồm 5 khu vực phân cách nhau bởi các chốt, ban đầu có sẵn 2 vùng màu là đỏ và xanh lá.\r\n<br>\r\nCó hai loại chốt là chốt mở (4 chốt), và chốt trộn (1 chốt). Khi click vào chốt mở, nếu hai bên chốt khác màu nhau, chốt sẽ không được mở. Nếu không phải như vậy, chốt sẽ mở và tạo thành một vùng to hơn. Đóng chốt chúng ta lại có các vùng nhỏ hơn. Chốt trộn là chốt sẽ hoà màu hai vùng hai bên. Màu xanh lá và màu đỏ sẽ trộn thành màu vàng cam. Màu vàng cam trộn với hai màu còn lại cũng thành màu vàng cam.\r\n<br>\r\nCác hình vuông sẽ biến mất khi vùng có nó có màu cùng với nó. Tuy nhiên sau khi biến mất nó cũng xoá luôn màu của vùng nó vừa mới nằm. Riêng hình vuông loại to thì phải cần 2 lần như vậy nó mới biến mất hoàn toàn.\r\n<br>\r\nĐiểm của bạn sẽ được cập nhật tự động khi hoàn thành game.',2000,262144,262144,200,0,86400000,'2016-01-12 15:35:41','2016-01-14 19:16:14','Squares hater','VCH',2),(17,6,'Running Horse',0,'<h5>Nhiệm vụ của bạn là dẫn con ngựa trên bàn cờ vua đi khắp bàn cờ và quay lại đúng điểm xuất phát</h5>\r\n<h5>Cách chơi</h5>\r\nClick chuột vào các ô để di chuyển con ngựa (theo cách di chuyển của con mã trên bàn cờ vua)<br>\r\nMỗi ô chỉ được đi qua đúng 1 lần.<br>\r\nClick chuột vào con ngựa để restart game.<br>\r\nĐiểm của bạn sẽ được cập nhật tự động sau khi hoàn thành game.',NULL,NULL,NULL,100,NULL,NULL,'2016-01-13 19:18:43','2016-01-14 19:16:14','Running Horse','RH',2),(19,5,'FizzBuzz',0,'			<div>\r\n			<p>\r\n				FizzBuzz là bài tập lập trình vô cùng quen thuộc. với một số nguyên x, bạn được yêu cầu in ra các số từ 1 đến x, mỗi số trên 1 dòng. Tuy nhiên, nếu\r\n				<ul>\r\n					<li>Số đó chia hết cho 3: in ra Fizz</li>\r\n					<li>Số đó chia hết cho 5: in ra Buzz</li>\r\n					<li>Số đó chia hết cho 15: in ra FizzBuzz</li>\r\n				</ul>\r\n			</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Số nguyên x (0 &lt; x &lt; 2000)\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					In ra output tương ứng như yêu cầu phía trên\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Test case mẫu\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>15</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>1\r\n2\r\nFizz\r\n4\r\nBuzz\r\nFizz\r\n7\r\n8\r\nFizz\r\nBuzz\r\n11\r\nFizz\r\n13\r\n14\r\nFizzBuzz</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',2000,262144,262144,100,0,86400000,'2016-01-14 08:18:48','2016-01-14 09:50:03','FizzBuzz','			<div>\r\n			<p>\r\n				FizzBuzz là bài tập lập trình vô cùng quen thuộc. với một số nguyên x, bạn được yêu cầu in ra các số từ 1 đến x, mỗi số trên 1 dòng. Tuy nhiên, nếu\r\n				<ul>\r\n					<li>Số đó chia hết cho 3: in ra Fizz</li>\r\n					<li>Số đó chia hết cho 5: in ra Buzz</li>\r\n					<li>Số đó chia hết cho 15: in ra FizzBuzz</li>\r\n				</ul>\r\n			</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Số nguyên x (0 &lt; x &lt; 2000)\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					In ra output tương ứng như yêu cầu phía trên\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Test case mẫu\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>15</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>1\r\n2\r\nFizz\r\n4\r\nBuzz\r\nFizz\r\n7\r\n8\r\nFizz\r\nBuzz\r\n11\r\nFizz\r\n13\r\n14\r\nFizzBuzz</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',1),(20,5,'Matrix',1,'			<div>\r\n			<p>\r\n				Bạn được cho một ma trận có kích cỡ n x m. Ví dụ như ma trận 3 x 4 sau, gồm các số từ 1 đến n x m, không trùng nhau:\r\n				<pre>2 3 4 5\r\n1 8 7 6\r\n12 9 10 11</pre>\r\n			Tìm thử xem có cách nào đi qua hết tất cả các ô trong ma trận, lần lượt từ bé đến lớn không, bắt đầu từ ô có giá trị 1. Bạn chỉ có thể đi đến các ô có cạnh liền kề.\r\n			</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Dòng đầu là hai số nguyên n và m (1 &lt; n &lt; 20, 1 &lt; m &lt; 20)<br>\r\n					Dòng thứ 2 trở đi là các phần tử của ma trận, phân cách bởi dấu cách.\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					In ra <code>YES</code> nếu có thể đi được. <code>NO</code> nếu không thể.\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Test case mẫu\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>3 4\r\n2 3 4 5\r\n1 8 7 6\r\n12 9 10 11</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>NO</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',2000,262144,262144,200,0,86400000,'2016-01-14 09:50:03','2016-01-14 12:42:18','Matrix','			<div>\r\n			<p>\r\n				Bạn được cho một ma trận có kích cỡ n x m. Ví dụ như ma trận 3 x 4 sau, gồm các số từ 1 đến n x m, không trùng nhau:\r\n				<pre>2 3 4 5\r\n1 8 7 6\r\n12 9 10 11</pre>\r\n			Tìm thử xem có cách nào đi qua hết tất cả các ô trong ma trận, lần lượt từ bé đến lớn không, bắt đầu từ ô có giá trị 1. Bạn chỉ có thể đi đến các ô có cạnh liền kề.\r\n			</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Dòng đầu là hai số nguyên n và m (1 &lt; n &lt; 20, 1 &lt; m &lt; 20)<br>\r\n					Dòng thứ 2 trở đi là các phần tử của ma trận, phân cách bởi dấu cách.\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					In ra <code>YES</code> nếu có thể đi được. <code>NO</code> nếu không thể.\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Test case mẫu\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>3 4\r\n2 3 4 5\r\n1 8 7 6\r\n12 9 10 11</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>NO</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',1),(21,5,'Next Prime',0,'			<div>\r\n			<p>\r\n				Với đầu vào là một số nguyên, hãy đưa ra kết quả là số nguyên tố tiếp theo lớn hơn số đó.\r\n			</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Dòng đầu là số nguyên n (2 &lt; n &lt; 2000)\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					Số nguyên tố tiếp theo lớn hơn số đó.\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Test case mẫu\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>11</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>13</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',2000,262144,262144,100,0,86400000,'2016-01-14 13:38:00','2016-01-14 13:38:00','Next Prime','			<div>\r\n			<p>\r\n				Với đầu vào là một số nguyên, hãy đưa ra kết quả là số nguyên tố tiếp theo lớn hơn số đó.\r\n			</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Dòng đầu là số nguyên n (2 &lt; n &lt; 2000)\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					Số nguyên tố tiếp theo lớn hơn số đó.\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Test case mẫu\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>11</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>13</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',1),(22,5,'Sum of Digits',0,'      <div>\r\n      <p>\r\n        Cho một số nguyên, hãy tính tổng các chữ số của số đó.\r\n      </p>\r\n      </div>\r\n      <div>\r\n      <dl>\r\n        <dt>\r\n          Input\r\n        </dt>\r\n        <dd>\r\n          Dòng đầu là số nguyên n (1000 &lt; n &lt; 100000000)\r\n        <dt>\r\n          Output\r\n        </dt>\r\n        <dd>\r\n          Hãy tính tổng các chữ số của số đó.\r\n        </dd>\r\n        <br>\r\n        <dt>\r\n          Test case mẫu\r\n        </dt>\r\n        <dd>\r\n          <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>input</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n                <td>\r\n                  <pre>12345</pre>\r\n                </td>\r\n            </tr>\r\n          </tbody>\r\n          <thead>\r\n            <tr>\r\n              <th>output</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n                <td>\r\n                  <pre>15</pre>\r\n                </td>\r\n            </tr>\r\n          </tbody>\r\n          </table>\r\n        </dd>\r\n      </dl>\r\n    </div>\r\n',2000,262144,262144,100,0,86400000,'2016-01-14 13:38:00','2016-01-14 13:38:00','Sum of Digits','      <div>\r\n      <p>\r\n        Cho một số nguyên, hãy tính tổng các chữ số của số đó.\r\n      </p>\r\n      </div>\r\n      <div>\r\n      <dl>\r\n        <dt>\r\n          Input\r\n        </dt>\r\n        <dd>\r\n          Dòng đầu là số nguyên n (1000 &lt; n &lt; 100000000)\r\n        <dt>\r\n          Output\r\n        </dt>\r\n        <dd>\r\n          Hãy tính tổng các chữ số của số đó.\r\n        </dd>\r\n        <br>\r\n        <dt>\r\n          Test case mẫu\r\n        </dt>\r\n        <dd>\r\n          <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>input</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n                <td>\r\n                  <pre>12345</pre>\r\n                </td>\r\n            </tr>\r\n          </tbody>\r\n          <thead>\r\n            <tr>\r\n              <th>output</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n                <td>\r\n                  <pre>15</pre>\r\n                </td>\r\n            </tr>\r\n          </tbody>\r\n          </table>\r\n        </dd>\r\n      </dl>\r\n    </div>\r\n',1),(23,5,'Adjacent Characters',0,'      <div>\r\n      <p>\r\n        Cho một chuỗi gồm các chữ cái la tinh viết thường. Hãy đưa ra kết quả là chuỗi đó đã được xoá các phần tử giống nhau liền kề nhau, chỉ giữ lại 1 kí tự duy nhất trong nhóm đó.\r\n      </p>\r\n      </div>\r\n      <div>\r\n      <dl>\r\n        <dt>\r\n          Input\r\n        </dt>\r\n        <dd>\r\n          Dòng đầu là chuỗi các chữ cái la tinh viết thường s. Độ dài không quá 1000 kí tự\r\n        <dt>\r\n          Output\r\n        </dt>\r\n        <dd>\r\n          Chuỗi sau khi đã được được xử lý.\r\n        </dd>\r\n        <br>\r\n        <dt>\r\n          Test case mẫu\r\n        </dt>\r\n        <dd>\r\n          <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>input</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n                <td>\r\n                  <pre>abccaabcaabbbb</pre>\r\n                </td>\r\n            </tr>\r\n          </tbody>\r\n          <thead>\r\n            <tr>\r\n              <th>output</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n                <td>\r\n                  <pre>abcabcab</pre>\r\n                </td>\r\n            </tr>\r\n          </tbody>\r\n          </table>\r\n        </dd>\r\n      </dl>\r\n    </div>\r\n',2000,262144,262144,100,0,86400000,'2016-01-14 13:38:00','2016-01-14 13:38:00','Adjacent Characters','      <div>\r\n      <p>\r\n        Cho một chuỗi gồm các chữ cái la tinh viết thường. Hãy đưa ra kết quả là chuỗi đó đã được xoá các phần tử giống nhau liền kề nhau, chỉ giữ lại 1 kí tự duy nhất trong nhóm đó.\r\n      </p>\r\n      </div>\r\n      <div>\r\n      <dl>\r\n        <dt>\r\n          Input\r\n        </dt>\r\n        <dd>\r\n          Dòng đầu là chuỗi các chữ cái la tinh viết thường s. Độ dài không quá 1000 kí tự\r\n        <dt>\r\n          Output\r\n        </dt>\r\n        <dd>\r\n          Chuỗi sau khi đã được được xử lý.\r\n        </dd>\r\n        <br>\r\n        <dt>\r\n          Test case mẫu\r\n        </dt>\r\n        <dd>\r\n          <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>input</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n                <td>\r\n                  <pre>abccaabcaabbbb</pre>\r\n                </td>\r\n            </tr>\r\n          </tbody>\r\n          <thead>\r\n            <tr>\r\n              <th>output</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n                <td>\r\n                  <pre>abcabcab</pre>\r\n                </td>\r\n            </tr>\r\n          </tbody>\r\n          </table>\r\n        </dd>\r\n      </dl>\r\n    </div>\r\n',1),(24,5,'Lego',0,'<div>\r\n  <p>\r\n  Hồi nhỏ, HuyND có 1 bộ xếp hình lego. Bộ gồm có nhiều mảnh, mỗi mảnh độ dày là 1 và có chiều dài cố định. Một mảnh có thể được ghép trên mảnh khác nếu như chúng có độ dài bằng nhau.\r\n  </p>\r\n  <p>\r\n  HuyND muốn xây số ít nhất các tòa tháp từ tất cả các mảnh của bộ xếp hình. Bạn hãy giúp anh ý.\r\n  </p>\r\n</div>\r\n<div>\r\n  <dl>\r\n    <dt>\r\n    Input\r\n    </dt>\r\n    <dd>\r\n    Dòng 1 là số N (1 ≤ N ≤ 1000) số mảnh trong bộ xếp hình lego. Dòng 2 là N số nguyên dương, phân cách bởi dấu cách, chiều dài của các mảnh.\r\n    <dt>\r\n    Output\r\n    </dt>\r\n    <dd>\r\n    Hai số, chiều cao của tháp cao nhất và tổng số tháp.\r\n    </dd>\r\n    <br>\r\n    <dt>\r\n    Sample test(s)\r\n    </dt>\r\n    <dd>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>input</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <pre>\r\n4\r\n6 5 6 7</pre>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n      <thead>\r\n        <tr>\r\n          <th>output</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <pre>\r\n2 3</pre>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    </dd>\r\n  </dl>\r\n</div>\r\n',2000,262144,262144,100,0,86400000,'2016-01-14 16:27:31','2016-01-14 16:27:31','Lego','<div>\r\n  <p>\r\n  Hồi nhỏ, HuyND có 1 bộ xếp hình lego. Bộ gồm có nhiều mảnh, mỗi mảnh độ dày là 1 và có chiều dài cố định. Một mảnh có thể được ghép trên mảnh khác nếu như chúng có độ dài bằng nhau.\r\n  </p>\r\n  <p>\r\n  HuyND muốn xây số ít nhất các tòa tháp từ tất cả các mảnh của bộ xếp hình. Bạn hãy giúp anh ý.\r\n  </p>\r\n</div>\r\n<div>\r\n  <dl>\r\n    <dt>\r\n    Input\r\n    </dt>\r\n    <dd>\r\n    Dòng 1 là số N (1 ≤ N ≤ 1000) số mảnh trong bộ xếp hình lego. Dòng 2 là N số nguyên dương, phân cách bởi dấu cách, chiều dài của các mảnh.\r\n    <dt>\r\n    Output\r\n    </dt>\r\n    <dd>\r\n    Hai số, chiều cao của tháp cao nhất và tổng số tháp.\r\n    </dd>\r\n    <br>\r\n    <dt>\r\n    Sample test(s)\r\n    </dt>\r\n    <dd>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>input</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <pre>\r\n4\r\n6 5 6 7</pre>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n      <thead>\r\n        <tr>\r\n          <th>output</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <pre>\r\n2 3</pre>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    </dd>\r\n  </dl>\r\n</div>\r\n',1),(25,5,'The Heirs',0,'<div>\r\n  <p>\r\n    Là fan cuồng của Kim Tan, LinhNT ko bỏ lỡ  bất cứ tập phim The Heirs nào. Anh muốn xem phim ngay nhưng do mạng cùi, video bị giật do kích cỡ dữ liệu cần xem trên 1 giây lớn hơn kich cỡ dữ liệu tải xuống trên 1 giây.\r\n    Để xem phim ko bị giật, LinhNT cần đợi 1 số nguyên giây rồi sau đó bắt đầu xem phim.\r\n  </p>\r\n  <p>\r\n    Giả sử video có chiều dài là c và LinhNT phải đợi t giây trước khi xem. Khi đó ở bất cứ thời điểm t<sub>0</sub>, t ≤ t<sub>0</sub> ≤ c + t, điều kiện sau cần thỏa mãn: dữ liệu thu được trong t<sub>0</sub> phải ko ít hơn lượng dữ liệu cần đển xem t<sub>0</sub> - t giây.\r\n  </p>\r\n  <p>\r\n    LinhNT muốn xem càng sớm càng tốt, hãy giúp anh ấy xác định số giây cần đợi ít nhất.\r\n  </p>\r\n</div>\r\n<div>\r\n<dl>\r\n  <dt>\r\n    Input\r\n  </dt>\r\n  <dd>\r\n    3 số nguyên ngăn cách bởi dấu cách: a, b, c (1 ≤ a, b, c ≤ 1000, a > b). a là lượng dữ liệu cần để xem 1 giây của video, b là lượng dữ liệu download được trong 1 giây, c là chiều dài video (giây).\r\n  <dt>\r\n    Output\r\n  </dt>\r\n  <dd>\r\n    Số nguyên giây ít nhất mà LinhNT cần đợi trước khi xem phim ko bị giật.\r\n  </dd>\r\n  <br>\r\n  <dt>\r\n    Sample test(s)\r\n  </dt>\r\n  <dd>\r\n    <table class=\"table table-bordered\">\r\n    <thead>\r\n      <tr>\r\n        <th>input</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n4 1 1</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th>output</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n3</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <table class=\"table table-bordered\">\r\n    <thead>\r\n      <tr>\r\n        <th>input</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n10 3 2</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th>output</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n5</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n  </dd>\r\n</dl>\r\n</div>\r\n',2000,262144,262144,100,0,86400000,'2016-01-14 16:27:31','2016-01-14 16:27:31','The Heirs','<div>\r\n  <p>\r\n    Là fan cuồng của Kim Tan, LinhNT ko bỏ lỡ  bất cứ tập phim The Heirs nào. Anh muốn xem phim ngay nhưng do mạng cùi, video bị giật do kích cỡ dữ liệu cần xem trên 1 giây lớn hơn kich cỡ dữ liệu tải xuống trên 1 giây.\r\n    Để xem phim ko bị giật, LinhNT cần đợi 1 số nguyên giây rồi sau đó bắt đầu xem phim.\r\n  </p>\r\n  <p>\r\n    Giả sử video có chiều dài là c và LinhNT phải đợi t giây trước khi xem. Khi đó ở bất cứ thời điểm t<sub>0</sub>, t ≤ t<sub>0</sub> ≤ c + t, điều kiện sau cần thỏa mãn: dữ liệu thu được trong t<sub>0</sub> phải ko ít hơn lượng dữ liệu cần đển xem t<sub>0</sub> - t giây.\r\n  </p>\r\n  <p>\r\n    LinhNT muốn xem càng sớm càng tốt, hãy giúp anh ấy xác định số giây cần đợi ít nhất.\r\n  </p>\r\n</div>\r\n<div>\r\n<dl>\r\n  <dt>\r\n    Input\r\n  </dt>\r\n  <dd>\r\n    3 số nguyên ngăn cách bởi dấu cách: a, b, c (1 ≤ a, b, c ≤ 1000, a > b). a là lượng dữ liệu cần để xem 1 giây của video, b là lượng dữ liệu download được trong 1 giây, c là chiều dài video (giây).\r\n  <dt>\r\n    Output\r\n  </dt>\r\n  <dd>\r\n    Số nguyên giây ít nhất mà LinhNT cần đợi trước khi xem phim ko bị giật.\r\n  </dd>\r\n  <br>\r\n  <dt>\r\n    Sample test(s)\r\n  </dt>\r\n  <dd>\r\n    <table class=\"table table-bordered\">\r\n    <thead>\r\n      <tr>\r\n        <th>input</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n4 1 1</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th>output</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n3</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <table class=\"table table-bordered\">\r\n    <thead>\r\n      <tr>\r\n        <th>input</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n10 3 2</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th>output</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n5</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n  </dd>\r\n</dl>\r\n</div>\r\n',1),(26,5,'Number Of Saint Valentine',1,'			<div>\r\n				<p>\r\n				Số được coi là số của ngày Valentine nếu nó được ghép bởi các số 144, 1, 14. Theo quy tắc trên thì 14144, 1414141414144141414 và 11114 là các số valentine nhưng 444111, 147 và 4111144 thì không phải\r\n				<p>\r\n				Cho số m. Kiểm tra xem số đó có phải là số valentine không.\r\n				</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Số m, (1 ≤ m ≤ 10<sup>9</sup>).\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					In ra <code>YES</code> nếu m là số valentine hoặc in <code>NO</code> nếu ngược lại.\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Sample test(s)\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n1414114</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\nYES</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n14314</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\nNO</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>',2000,262144,262144,200,0,86400000,'2016-01-14 16:27:31','2016-01-14 16:27:31','Number Of Saint Valentine','			<div>\r\n				<p>\r\n				Số được coi là số của ngày Valentine nếu nó được ghép bởi các số 144, 1, 14. Theo quy tắc trên thì 14144, 1414141414144141414 và 11114 là các số valentine nhưng 444111, 147 và 4111144 thì không phải\r\n				<p>\r\n				Cho số m. Kiểm tra xem số đó có phải là số valentine không.\r\n				</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Số m, (1 ≤ m ≤ 10<sup>9</sup>).\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					In ra <code>YES</code> nếu m là số valentine hoặc in <code>NO</code> nếu ngược lại.\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Sample test(s)\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n1414114</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\nYES</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n14314</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\nNO</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>',1),(27,6,'A Wish',0,'<div>\r\n  <p>\r\n    Ngày xửa ngày xưa, trong một lần đi dạo trên bãi biển, HuyND vấp phải 1 chiếc đèn dầu cũ và bỗng nhiên thần đèn hiện ra và ban cho anh 1 điều ước. Điều ước đó là cho phép HuyND được xóa đi chữ số cuối cùng hoặc chữ số trước chữ số cuối cùng trong tài khoản ngân hàng VCB của anh nhiều nhất là một lần. Ví dụ: nếu hiện tại tài khoản của HuyND đang là -12000023, anh có thể dùng điều ước để chuyển account thành -1200002 hoặc -1200003.\r\n  <p>\r\n    Hãy giúp HuyND dùng điều ước làm tối đa account nhất có thể.\r\n  </p>\r\n</div>\r\n<div>\r\n<dl>\r\n  <dt>\r\n    Input\r\n  </dt>\r\n  <dd>\r\n    số nguyên n (10 ≤ |n| ≤ 10<sup>9</sup>) — tài khoản hiện tại của HuyND\r\n  <dt>\r\n    Output\r\n  </dt>\r\n  <dd>\r\n    Tài khoản tối đa mà HuyND có được sau khi dùng điều ước.\r\n  </dd>\r\n  <br>\r\n  <dt>\r\n    Sample test(s)\r\n  </dt>\r\n  <dd>\r\n    <table class=\"table table-bordered\">\r\n    <thead>\r\n      <tr>\r\n        <th>input</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n1234</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th>output</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n1234</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <table class=\"table table-bordered\">\r\n    <thead>\r\n      <tr>\r\n        <th>input</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n-10</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th>output</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n0</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n  </dd>\r\n</dl>\r\n</div>\r\n',2000,262144,262144,100,0,86400000,'2016-01-14 16:27:31','2016-01-14 19:16:14','A Wish','<div>\r\n  <p>\r\n    Ngày xửa ngày xưa, trong một lần đi dạo trên bãi biển, HuyND vấp phải 1 chiếc đèn dầu cũ và bỗng nhiên thần đèn hiện ra và ban cho anh 1 điều ước. Điều ước đó là cho phép HuyND được xóa đi chữ số cuối cùng hoặc chữ số trước chữ số cuối cùng trong tài khoản ngân hàng VCB của anh nhiều nhất là một lần. Ví dụ: nếu hiện tại tài khoản của HuyND đang là -12000023, anh có thể dùng điều ước để chuyển account thành -1200002 hoặc -1200003.\r\n  <p>\r\n    Hãy giúp HuyND dùng điều ước làm tối đa account nhất có thể.\r\n  </p>\r\n</div>\r\n<div>\r\n<dl>\r\n  <dt>\r\n    Input\r\n  </dt>\r\n  <dd>\r\n    số nguyên n (10 ≤ |n| ≤ 10<sup>9</sup>) — tài khoản hiện tại của HuyND\r\n  <dt>\r\n    Output\r\n  </dt>\r\n  <dd>\r\n    Tài khoản tối đa mà HuyND có được sau khi dùng điều ước.\r\n  </dd>\r\n  <br>\r\n  <dt>\r\n    Sample test(s)\r\n  </dt>\r\n  <dd>\r\n    <table class=\"table table-bordered\">\r\n    <thead>\r\n      <tr>\r\n        <th>input</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n1234</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th>output</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n1234</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n    <table class=\"table table-bordered\">\r\n    <thead>\r\n      <tr>\r\n        <th>input</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n-10</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    <thead>\r\n      <tr>\r\n        <th>output</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n          <td>\r\n            <pre>\r\n0</pre>\r\n          </td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n  </dd>\r\n</dl>\r\n</div>\r\n',1),(28,5,'Swap',1,'			<div>\r\n				<p>\r\n					HuyND có một mảng gồm n số nguyên. Mỗi giây HuyND có thể đổi chỗ hai phần tử cạnh nhau trong mảng. Sau một hồi đổi chỗ giữa các phần tử trong mảng, HuyND chợt nghĩ rằng, ko biết sau một số lần hữu hạn đổi chỗ sẽ thu được một mảng mà hai phần tử liền kề là khác nhau hay ko ?\r\n				</p>\r\n				<p>\r\n					Bạn hãy giúp anh ấy.\r\n				</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Dòng đầu tiên là số nguyên n (1 ≤ n ≤ 100) — số lượng các phần tử trong mảng.\r\n					Dòng thứ 2 là n số nguyên a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub> (1 ≤ a<sub>i</sub> ≤ 1000) — các phần tử của mảng.\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					in ra <code>YES</code> nếu có thể, in ra <code>NO</code> nếu ngược lại.\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Sample test(s)\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n3\r\n1 1 2</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\nYES</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n4\r\n7 7 7 7</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\nNO</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',2000,262144,262144,200,3,86400000,'2016-01-14 16:27:31','2016-01-14 16:27:31','Swap','			<div>\r\n				<p>\r\n					HuyND có một mảng gồm n số nguyên. Mỗi giây HuyND có thể đổi chỗ hai phần tử cạnh nhau trong mảng. Sau một hồi đổi chỗ giữa các phần tử trong mảng, HuyND chợt nghĩ rằng, ko biết sau một số lần hữu hạn đổi chỗ sẽ thu được một mảng mà hai phần tử liền kề là khác nhau hay ko ?\r\n				</p>\r\n				<p>\r\n					Bạn hãy giúp anh ấy.\r\n				</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Dòng đầu tiên là số nguyên n (1 ≤ n ≤ 100) — số lượng các phần tử trong mảng.\r\n					Dòng thứ 2 là n số nguyên a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub> (1 ≤ a<sub>i</sub> ≤ 1000) — các phần tử của mảng.\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					in ra <code>YES</code> nếu có thể, in ra <code>NO</code> nếu ngược lại.\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Sample test(s)\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n3\r\n1 1 2</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\nYES</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n4\r\n7 7 7 7</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\nNO</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',1),(29,5,'Sleep Time',0,'			<div>\r\n				<p>\r\n					KhanhLD tỉnh dậy và thấy thời gian đang s trên đồng hồ điện tử. Ngoài ra KhanhLD còn biết mình đã ngủ được khoảng thời gian là t.\r\n				</p>\r\n				<p>\r\n					Bạn hãy giúp anh KhanhLD viết chương trình, nhập vào s và t đưa ra thời điểm p mà KhanhLD lên giường đi ngủ. Chú ý là KhanhLD có thể đi ngủ từ tối hôm qua.\r\n				</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Dòng đầu là thời gian s hiện tại theo format \"hh:mm\".<br>\r\n					Dòng đầu là thời gian t theo format \"hh:mm\", khoảng thời gian mà KhanhLD đã ngủ. Hai thời gian này được đảm bảo là đúng, và đúng theo format 24-h: 00 ≤ hh ≤ 23, 00 ≤ mm ≤ 59.\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					in ra thời điểm p mà KhanhLD bắt đầu ngủ theo format như trên.\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Sample test(s)\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n05:50\r\n05:44</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n00:06</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n00:00\r\n01:00</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n23:00</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',2000,262144,262144,100,0,86400000,'2016-01-14 16:27:31','2016-01-14 16:27:31','Sleep Time','			<div>\r\n				<p>\r\n					KhanhLD tỉnh dậy và thấy thời gian đang s trên đồng hồ điện tử. Ngoài ra KhanhLD còn biết mình đã ngủ được khoảng thời gian là t.\r\n				</p>\r\n				<p>\r\n					Bạn hãy giúp anh KhanhLD viết chương trình, nhập vào s và t đưa ra thời điểm p mà KhanhLD lên giường đi ngủ. Chú ý là KhanhLD có thể đi ngủ từ tối hôm qua.\r\n				</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Dòng đầu là thời gian s hiện tại theo format \"hh:mm\".<br>\r\n					Dòng đầu là thời gian t theo format \"hh:mm\", khoảng thời gian mà KhanhLD đã ngủ. Hai thời gian này được đảm bảo là đúng, và đúng theo format 24-h: 00 ≤ hh ≤ 23, 00 ≤ mm ≤ 59.\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					in ra thời điểm p mà KhanhLD bắt đầu ngủ theo format như trên.\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Sample test(s)\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n05:50\r\n05:44</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n00:06</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n00:00\r\n01:00</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n23:00</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',1),(30,6,'Subtraction Game',1,'			<div>\r\n				<p>\r\n					HuyND đang chơi một trò chơi với các con số.\r\n				</p>\r\n				<p>\r\n					HuyND có n số nguyên dương: x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub>, Anh ấy có thể thực hiện hành động dưới đây bao nhiêu lần tùy thích:\r\n					Chọn hai vị trí i và j sao cho x<sub>j</sub> &lt; x<sub>i</sub> và thực hiện phép toán x<sub>i</sub> = x<sub>i</sub> - x<sub>j</sub>. Mục tiêu là để cho tổng tất cả các số nhỏ nhất có thể. Hãy giúp HuyND tìm tổng nhỏ nhất đó.\r\n				</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Dòng đầu là số n (2 ≤ n ≤ 100). Dòng thứ hai là n số nguyên: x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub> (1 ≤ x<sub>i</sub> ≤ 100).<br>\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					Tổng nhỏ nhất sau khi thực hiện các hành động\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Sample test(s)\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n2\r\n1 2</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n2</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n3\r\n2 4 6</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n6</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',2000,262144,262144,200,0,86400000,'2016-01-14 16:27:31','2016-01-14 19:16:14','Subtraction Game','			<div>\r\n				<p>\r\n					HuyND đang chơi một trò chơi với các con số.\r\n				</p>\r\n				<p>\r\n					HuyND có n số nguyên dương: x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub>, Anh ấy có thể thực hiện hành động dưới đây bao nhiêu lần tùy thích:\r\n					Chọn hai vị trí i và j sao cho x<sub>j</sub> &lt; x<sub>i</sub> và thực hiện phép toán x<sub>i</sub> = x<sub>i</sub> - x<sub>j</sub>. Mục tiêu là để cho tổng tất cả các số nhỏ nhất có thể. Hãy giúp HuyND tìm tổng nhỏ nhất đó.\r\n				</p>\r\n			</div>\r\n			<div>\r\n			<dl>\r\n				<dt>\r\n					Input\r\n				</dt>\r\n				<dd>\r\n					Dòng đầu là số n (2 ≤ n ≤ 100). Dòng thứ hai là n số nguyên: x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub> (1 ≤ x<sub>i</sub> ≤ 100).<br>\r\n				<dt>\r\n					Output\r\n				</dt>\r\n				<dd>\r\n					Tổng nhỏ nhất sau khi thực hiện các hành động\r\n				</dd>\r\n				<br>\r\n				<dt>\r\n					Sample test(s)\r\n				</dt>\r\n				<dd>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n2\r\n1 2</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n2</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n					<table class=\"table table-bordered\">\r\n					<thead>\r\n						<tr>\r\n						  <th>input</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n3\r\n2 4 6</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					<thead>\r\n						<tr>\r\n						  <th>output</th>\r\n						</tr>\r\n					</thead>\r\n					<tbody>\r\n						<tr>\r\n					  		<td>\r\n					  			<pre>\r\n6</pre>\r\n					  		</td>\r\n						</tr>\r\n					</tbody>\r\n					</table>\r\n				</dd>\r\n			</dl>\r\n		</div>\r\n',1);
/*!40000 ALTER TABLE `problems` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `submissions`
--

DROP TABLE IF EXISTS `submissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `submissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `problem_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `language` int(11) DEFAULT NULL,
  `state` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `result_status` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `last_passed_test_case` int(11) DEFAULT NULL,
  `used_time` int(11) DEFAULT NULL,
  `used_memory` int(11) DEFAULT NULL,
  `received_point` int(11) DEFAULT '0',
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `failed_test_case_result` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `problem_id` (`problem_id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `submissions_ibfk_1` FOREIGN KEY (`problem_id`) REFERENCES `problems` (`id`),
  CONSTRAINT `submissions_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=106 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `submissions`
--

LOCK TABLES `submissions` WRITE;
/*!40000 ALTER TABLE `submissions` DISABLE KEYS */;
INSERT INTO `submissions` VALUES (34,12,41,0,'finished','Accepted',0,0,0,100,'2016-01-14 08:53:25','2016-01-14 08:53:25',NULL),(36,19,41,0,'queued','',0,0,0,0,'2016-01-14 09:05:19','2016-01-14 09:05:19',NULL),(37,19,19,0,'finished','Compile Error',0,0,0,0,'2016-01-14 09:08:05','2016-01-14 09:08:10',NULL),(38,19,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 10:13:27','2016-01-14 10:13:31','1\n2\nFizz\n4\nBuzz\nFizz\n7\n8\nFizz\nBuzz\n11\nFizz\n13\n14\nFizzBuzz\n16\n17\nFizz\n19\nBuzz\nFizz\n22\n23\nFizz\nBuzz\n26\nFizz\n28\n29\nFizzBuzz\n31\n32\nFizz\n34\nBuzz\nFizz\n37\n38\nFizz\nBuzz\n41\nFizz'),(39,19,19,5,'queued','',0,0,0,0,'2016-01-14 10:16:08','2016-01-14 10:16:08',NULL),(40,19,19,5,'finished','Accepted',20,345,4860,100,'2016-01-14 10:16:39','2016-01-14 10:16:43',NULL),(41,19,41,2,'finished','Accepted',20,31,4960,100,'2016-01-14 10:18:06','2016-01-14 10:18:09',NULL),(42,19,41,2,'finished','Accepted',20,29,4956,0,'2016-01-14 10:20:22','2016-01-14 10:20:26',NULL),(43,20,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 13:12:37','2016-01-14 13:13:13','NO\nYES\nNO\nNO\nYES\nNO\nNO\nYES\nNO\nNO\nNO\nYES'),(44,20,41,2,'finished','Runtime Error',0,0,0,0,'2016-01-14 13:15:46','2016-01-14 13:15:50',NULL),(45,20,41,2,'finished','Wrong Answer',1,21,4932,0,'2016-01-14 13:17:07','2016-01-14 13:17:11',NULL),(46,20,41,2,'finished','Wrong Answer',2,25,4936,0,'2016-01-14 13:21:50','2016-01-14 13:21:54',NULL),(48,20,41,2,'finished','Runtime Error',0,0,0,0,'2016-01-14 13:39:19','2016-01-14 13:39:23',NULL),(49,20,41,2,'finished','Runtime Error',0,0,0,0,'2016-01-14 13:40:09','2016-01-14 13:40:13',NULL),(52,21,41,2,'queued','',0,0,0,0,'2016-01-14 13:49:17','2016-01-14 13:49:17',NULL),(53,21,41,2,'queued','',0,0,0,0,'2016-01-14 13:52:40','2016-01-14 13:52:40',NULL),(54,21,41,2,'finished','Accepted',20,52,5280,100,'2016-01-14 13:57:39','2016-01-14 13:57:43',NULL),(55,20,41,2,'finished','Accepted',20,27,5000,200,'2016-01-14 14:00:24','2016-01-14 14:00:28',NULL),(56,22,19,5,'finished','Accepted',20,426,4804,80,'2016-01-14 14:11:06','2016-01-14 14:11:10',NULL),(57,22,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 14:14:30','2016-01-14 14:14:34','82588226'),(58,22,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 14:15:58','2016-01-14 14:16:02','82588226'),(59,22,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 14:19:12','2016-01-14 14:19:15','82588226'),(60,22,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 14:20:48','2016-01-14 14:20:51','82588226'),(61,22,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 14:23:22','2016-01-14 14:23:26','82588226'),(62,22,41,2,'finished','Accepted',20,24,4924,80,'2016-01-14 14:28:11','2016-01-14 14:28:15',NULL),(63,22,42,2,'finished','Accepted',20,28,4924,100,'2016-01-14 14:38:04','2016-01-14 14:38:07',NULL),(64,23,19,5,'queued','',0,0,0,0,'2016-01-14 14:46:01','2016-01-14 14:46:01',NULL),(65,23,19,5,'finished','Accepted',20,24,4824,100,'2016-01-14 14:46:55','2016-01-14 14:46:59',NULL),(66,23,41,2,'finished','Accepted',20,26,4924,100,'2016-01-14 14:52:39','2016-01-14 14:52:43',NULL),(67,9,41,0,'finished','Accepted',0,0,0,100,'2016-01-14 16:30:55','2016-01-14 16:30:55',NULL),(68,10,41,0,'finished','Accepted',0,0,0,100,'2016-01-14 16:31:14','2016-01-14 16:31:14',NULL),(69,11,41,0,'finished','Accepted',0,0,0,200,'2016-01-14 16:32:25','2016-01-14 16:32:25',NULL),(70,13,41,0,'finished','Accepted',0,0,0,200,'2016-01-14 16:32:52','2016-01-14 16:32:52',NULL),(71,14,41,0,'finished','Accepted',0,0,0,100,'2016-01-14 16:34:20','2016-01-14 16:34:20',NULL),(72,15,41,0,'finished','Accepted',0,0,0,100,'2016-01-14 16:34:43','2016-01-14 16:34:43',NULL),(73,16,41,0,'finished','Accepted',0,0,0,200,'2016-01-14 16:35:13','2016-01-14 16:35:13',NULL),(74,17,41,0,'finished','Accepted',0,0,0,100,'2016-01-14 16:36:13','2016-01-14 16:36:13',NULL),(75,24,19,5,'finished','Accepted',14,376,4812,200,'2016-01-14 17:18:13','2016-01-14 17:18:17',NULL),(76,25,19,5,'finished','Runtime Error',0,0,0,0,'2016-01-14 17:23:04','2016-01-14 17:23:08',NULL),(77,25,19,2,'finished','Accepted',49,100,4932,200,'2016-01-14 17:24:05','2016-01-14 17:24:09',NULL),(78,24,41,2,'finished','Accepted',14,23,4936,200,'2016-01-14 17:28:33','2016-01-14 17:28:37',NULL),(79,26,19,2,'finished','Accepted',47,32,4928,200,'2016-01-14 17:29:24','2016-01-14 17:29:27',NULL),(80,26,41,2,'finished','Accepted',47,30,4932,200,'2016-01-14 17:38:49','2016-01-14 17:38:52',NULL),(81,25,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 17:46:11','2016-01-14 17:46:14','3.0'),(82,25,41,2,'finished','Wrong Answer',1,17,4928,0,'2016-01-14 17:47:02','2016-01-14 17:47:06',NULL),(83,25,41,2,'finished','Accepted',49,30,4936,200,'2016-01-14 17:50:21','2016-01-14 17:50:24',NULL),(84,27,19,2,'finished','Runtime Error',0,0,0,0,'2016-01-14 17:51:47','2016-01-14 17:51:51',NULL),(85,27,19,5,'finished','Accepted',47,25,4812,100,'2016-01-14 17:52:13','2016-01-14 17:52:16',NULL),(86,28,19,5,'finished','Accepted',37,26,4836,200,'2016-01-14 17:59:43','2016-01-14 17:59:47',NULL),(87,29,19,5,'finished','Accepted',47,27,4828,100,'2016-01-14 18:17:42','2016-01-14 18:17:46',NULL),(88,27,41,2,'finished','Wrong Answer',1,15,4920,0,'2016-01-14 18:17:48','2016-01-14 18:17:52',NULL),(89,30,19,5,'finished','Accepted',34,148,6376,200,'2016-01-14 18:22:01','2016-01-14 18:22:05',NULL),(90,27,41,2,'finished','Wrong Answer',1,16,4920,0,'2016-01-14 18:22:42','2016-01-14 18:22:46',NULL),(91,28,41,2,'finished','Accepted',37,31,4940,200,'2016-01-14 18:34:14','2016-01-14 18:34:17',NULL),(92,29,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 18:40:32','2016-01-14 18:40:36','00:00'),(93,29,41,2,'finished','Accepted',47,30,4936,100,'2016-01-14 18:41:02','2016-01-14 18:41:06',NULL),(94,30,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 18:43:56','2016-01-14 18:44:00','1'),(95,30,41,2,'finished','Wrong Answer',2,21,4924,0,'2016-01-14 18:44:47','2016-01-14 18:44:51',NULL),(96,30,41,2,'finished','Wrong Answer',3,24,4924,0,'2016-01-14 18:50:52','2016-01-14 18:50:56',NULL),(97,30,41,2,'finished','Runtime Error',0,0,0,0,'2016-01-14 18:57:48','2016-01-14 18:57:52',NULL),(98,30,41,2,'finished','Accepted',34,26,4928,200,'2016-01-14 18:59:48','2016-01-14 18:59:52',NULL),(99,27,41,2,'finished','Runtime Error',1,26,4920,0,'2016-01-14 19:07:22','2016-01-14 19:07:26',NULL),(100,27,41,2,'finished','Accepted',47,25,4928,100,'2016-01-14 19:09:56','2016-01-14 19:10:00',NULL),(101,27,42,0,'finished','Compile Error',0,0,0,0,'2016-01-14 19:21:43','2016-01-14 19:21:47',NULL),(102,27,42,0,'finished','Compile Error',0,0,0,0,'2016-01-14 19:23:35','2016-01-14 19:23:38',NULL),(103,27,41,2,'finished','Wrong Answer',0,0,0,0,'2016-01-14 19:24:49','2016-01-14 19:24:53','220'),(104,27,41,2,'finished','Accepted',47,44,6860,0,'2016-01-14 19:25:03','2016-01-14 19:25:07',NULL),(105,30,41,2,'finished','Accepted',34,53,6852,0,'2016-01-14 19:26:45','2016-01-14 19:26:49',NULL);
/*!40000 ALTER TABLE `submissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_forgot_passwords`
--

DROP TABLE IF EXISTS `user_forgot_passwords`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_forgot_passwords` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `token` varchar(40) DEFAULT NULL,
  `expire_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`),
  CONSTRAINT `user_forgot_passwords_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_forgot_passwords`
--

LOCK TABLES `user_forgot_passwords` WRITE;
/*!40000 ALTER TABLE `user_forgot_passwords` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_forgot_passwords` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_join`
--

DROP TABLE IF EXISTS `user_join`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_join` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `contest_id` int(11) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `contest_id` (`contest_id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `user_join_ibfk_1` FOREIGN KEY (`contest_id`) REFERENCES `contests` (`id`),
  CONSTRAINT `user_join_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_join`
--

LOCK TABLES `user_join` WRITE;
/*!40000 ALTER TABLE `user_join` DISABLE KEYS */;
INSERT INTO `user_join` VALUES (1,19,5,'2016-01-13 18:58:38'),(2,41,5,'2016-01-13 18:58:38'),(3,42,5,'2016-01-14 13:38:00'),(4,42,6,'2016-01-14 19:16:14'),(5,41,6,'2016-01-14 19:16:14');
/*!40000 ALTER TABLE `user_join` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_scores`
--

DROP TABLE IF EXISTS `user_scores`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_scores` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL,
  `contest_id` int(11) DEFAULT NULL,
  `point` int(11) DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `contest_id` (`contest_id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `user_scores_ibfk_1` FOREIGN KEY (`contest_id`) REFERENCES `contests` (`id`),
  CONSTRAINT `user_scores_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_scores`
--

LOCK TABLES `user_scores` WRITE;
/*!40000 ALTER TABLE `user_scores` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_scores` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `email` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `encrypted_password` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `reset_password_token` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `reset_password_sent_at` datetime DEFAULT NULL,
  `remember_created_at` datetime DEFAULT NULL,
  `sign_in_count` int(11) NOT NULL DEFAULT '0',
  `current_sign_in_at` datetime DEFAULT NULL,
  `last_sign_in_at` datetime DEFAULT NULL,
  `current_sign_in_ip` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `last_sign_in_ip` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `locale` int(11) DEFAULT '0',
  `student_id` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_users_on_email` (`email`),
  UNIQUE KEY `index_users_on_reset_password_token` (`reset_password_token`)
) ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (19,'nguyen.anh.tien@framgia.com','$2a$12$kjxb9lhUT4YE0SxNlabIJOYNK6pOC.gSONGpcJ6UMCc7MthUJbxp2','86f0d0264eaf39753cf8b666a0696bd1a70ee756','2015-07-30 11:10:40',NULL,99,'2016-01-14 12:49:28','2015-12-07 18:04:54','127.0.0.1','127.0.0.1','2013-11-09 01:29:59','2016-01-14 12:42:18',0,''),(41,'tran.ba.trong@framgia.com','$2a$10$o2WqrRmFvLI2u1E1LKc9qubyv/JgKIDzg.gMbzguM4wsvLzj82k/m',NULL,NULL,NULL,50,'2016-01-14 19:23:57','2016-01-14 19:18:38','192.168.1.8','192.168.1.8','2013-11-11 10:26:33','2016-01-14 19:16:14',0,''),(42,'trongtb90@gmail.com','$2a$12$q4pQ11v96WYMpVcUrxMMmeX6zhRbUO8VbZtXJPRcNFYtyjiISkSRe','f58decf2fe22e5ca4d3a34de7e6c652eb96d04aa',NULL,NULL,3,'2016-01-14 19:18:50','2016-01-14 19:23:51','192.168.1.8','192.168.1.8','2016-01-14 08:18:48','2016-01-14 19:16:14',0,'20062510');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-01-14 19:26:50
